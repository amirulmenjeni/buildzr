# Builds and publishes the package to TestPyPI on when a PR is opened or
# synchronized, but only if the tests workflow has completed successfully.

name: prerelease

on:
  workflow_run:
    workflows: ["tests"]
    types:
      - completed
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  build:
    if: contains(github.event.pull_request.commits[0].message, '[skip-cli]') == false
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Hatch
      uses: pypa/hatch@install

    - name: Set up miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: 'latest'
        activate-environment: buildzr-dev
        environment-file: environment.yml

    - name: Install dependencies for building the package
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build

    - name: Install hatch
      uses: pypa/hatch@install

    - name: Bump pre-release version
      run: |
        hatch version b
        NEW_VERSION=`hatch version`
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add buildzr/__about__.py
        git commit -m "[skip-ci] Bump version to $NEW_VERSION"
        git tag $NEW_VERSION
        git push
        git push --tags

    - name: Build package
      run: |
        python -m build

    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.run_id }}

    - name: Display downloaded build files
      run: ls -R

    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/