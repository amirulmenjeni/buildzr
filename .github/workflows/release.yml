name: release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies for building the package
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Hatch
      uses: pypa/hatch@install

    - name: Update Version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        hatch version release

    - name: Check version changed
      id: check-version-changed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
        else
          echo "Version hasn't changed. Skipping the rest of the job."
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Create and push tags
      if: steps.check-version-changed.outputs.version_changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        hatch version release
        NEW_VERSION="v$(hatch version)"

        git remote set-url --push origin https://amirulmenjeni:${GITHUB_TOKEN}@github.com/amirulmenjeni/buildzr.git

        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        git add buildzr/__about__.py
        git commit -m "ci: [skip-ci] Update version to $NEW_VERSION"

        git tag $NEW_VERSION
        git push origin ${{ github.ref}}
        git push origin ${{ github.ref }} --tags

    - name: Build package
      if: steps.check-version-changed.outputs.version_changed == 'true'
      run: |
        python -m build

    - name: Upload build
      if: steps.check-version-changed.outputs.version_changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: dist/

    - name: Publish package to PyPI
      if: steps.check-version-changed.outputs.version_changed == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}